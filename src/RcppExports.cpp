// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cluster_gen
Rcpp::List cluster_gen(Rcpp::IntegerVector x, int lx, Rcpp::Nullable<Rcpp::IntegerVector> y, Rcpp::Nullable<int> ly, bool prog);
RcppExport SEXP _RTransferEntropy_cluster_gen(SEXP xSEXP, SEXP lxSEXP, SEXP ySEXP, SEXP lySEXP, SEXP progSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type lx(lxSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type ly(lySEXP);
    Rcpp::traits::input_parameter< bool >::type prog(progSEXP);
    rcpp_result_gen = Rcpp::wrap(cluster_gen(x, lx, y, ly, prog));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RTransferEntropy_cluster_gen", (DL_FUNC) &_RTransferEntropy_cluster_gen, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_RTransferEntropy(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
